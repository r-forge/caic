% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-
\documentclass[a4paper]{article}

\usepackage{geometry}
\setcounter{secnumdepth}{0}
\setlength{\parskip}{9pt}
\geometry{a4paper, textwidth=15cm, textheight=25cm}

% \VignetteIndexEntry{An R Package for comparative analysis by independent contrasts} 
% \VignetteDepends{ape} 
% \VignetteKeyword{stats} 
% \VignetteKeyword{kwd2} 

\title{The CAIC package: methods benchmarks.}
\author{David Orme}

\SweaveOpts{echo=TRUE}
\begin{document}

\maketitle

This file contains details on the benchmark testing of the implementation of various methods in the package against other existing implementations.
<<echo=FALSE>>=
options(width=85)
@
The main benchmark dataset is  a 200 tip tree grown under a pure-birth, constant-rates model using the \texttt{growTree()} function. Three co-varying continuous variables and a two and a three level categorical variable were evolved on the tree. The details of the code are presented in the file  `BenchmarkDataCreator.R', which details the covariation between the continuous traits and the transition rate matrix for the categorical variables. An extra variable also tests the special case of having no variation in the reference variable at a polytomy. The simulated dichotomous tree has also been degraded to contain a few polytomies. The creator file also handles exporting the data and tree into a form suitable for use in CAIC.



\section{Benchmarking against CAIC.}

These benchmarks test the implementation of independent contrast calculations using the \texttt{crunch()} and \texttt{brunch()} algorithms in the package `CAIC' against the implementations in the Mac Classic program CAIC v2.6.9, running in Mac OS 9.2.2 emulation under Mac OS 10.4.10. 

The benchmark dataset, created using the the file  `BenchmarkDataCreator.R' and saved as `Benchmark.Rda' contains the following objects:
\begin{description}
  \item[\texttt{BENCH}] A 200 tip tree grown under a pure-birth, constant-rates model using the \texttt{growTree()} function. 
  \item[\texttt{BENCHPCrDi213oly}] A version of the tree in which six polytomies have been created by collapsing the shortest internal branches.
  \item[\texttt{BenchData}] A data frame of tip data for the trees containing the following variables, either evolved using \texttt{growTree()} or modified from such evolved variables:
  \begin{description}
    \item[\texttt{node}] Identifies which tip on the tree each row of data relates to.
	\item[\texttt{contResp, contExp1, contExp2}] Three co-varying continuous variables evolved under Brownian motion along the tree.
	\item[\texttt{contExp1NoVar}] A version of \texttt{contExp1} which has identical values for five more distal polytomies. This is present to test the behaviour of the implementations at polytomies which have no variation in the reference variable.
	\item[\texttt{contRespNA, contExp1NA, contExp2NA}] As above but with a small proportion (\~{}5\%) of missing data.
	\item[\texttt{biFact, triFact}] A binary and ternary categorical variable evolving under a rate matrix across the tree.
	\item[\texttt{biFactNA, triFactNA}] As above, but with a small proportion (\~{}5\%) of missing data.
	\item[\texttt{SppRich}] Integer species richness values, with clade sizes taken from a broken stick distribution of 5000 species among the 200 extant tips, but with richness values distributed arbitrarily across tips.
\end{description}
\end{description}


\subsection{The \texttt{crunch} algorithm}

Five analyses were performed in CAIC to benchmark the following tests:
\begin{description}
  \item[CrDi213] A dichotomous tree with complete data in three continuous variables.
  \item[CrDi657] A dichotomous tree with incomplete data in three continuous variables.
  \item[CrPl213] A polytomous tree with complete data in three continuous variables.
  \item[CrPl413] A polytomous tree with complete data in three continuous variables, but with no variation in the reference variable at some polytomies.
  \item[CrPl657] A polytomous tree with incomplete data in three continuous variables.
\end{description}

 The log files `CAIC\_BenchTreeDi.log' and `CAIC\_BenchTreePoly.log' describe the input used to run these analyses in CAIC, with the column numbers used to identify variables using the same order as the variables in the data frame \texttt{BenchData}. The following code loads the output of the CAIC analysis into R. Each of the data frames contains the standard CAIC contrast table consisting of: the CAIC code for the node, the contrast in each variable, the standard deviation of the contrast, the height of the node, the number of subtaxa descending from the node; and the nodal values of the variables.

<<>>=
CAIC.CrDi213 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_CrDi213")
CAIC.CrDi657 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_CrDi657")
CAIC.CrPl213 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_CrPl213")
CAIC.CrPl413 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_CrPl413")
CAIC.CrPl657 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_CrPl657")
@

The next section of code duplicates these CAIC analyses using the \texttt{crunch()} function. Note that the default internal branch length used in calculations at a polytomy (\texttt{polytomy.brlen}) needs to be changed from the 0, which is the default in \texttt{crunch()}, to 1, which was the default in CAIC. The \texttt{caic.table()} function is used to extract a contrast table from the \texttt{crunch()} output, including CAIC style node labels.

<<>>=
load("../../benchmarks/Benchmark.rda")
library(CAIC)
crunch.CrDi213 <- crunch(contResp ~ contExp1 + contExp2, data=BenchData, phy=BENCH, names.col=node, polytomy.brlen=1)
crunch.CrDi213.tab <- caic.table(crunch.CrDi213, CAIC.codes=TRUE)

crunch.CrDi657 <- crunch(contRespNA ~ contExp1NA + contExp2NA, data=BenchData, phy=BENCH, names.col=node, polytomy.brlen=1)
crunch.CrDi657.tab <- caic.table(crunch.CrDi657, CAIC.codes=TRUE)

crunch.CrPl213 <- crunch(contResp ~ contExp1 + contExp2, data=BenchData, phy=BENCHPoly, names.col=node, polytomy.brlen=1)
crunch.CrPl213.tab <- caic.table(crunch.CrPl213, CAIC.codes=TRUE)

crunch.CrPl413 <- crunch(contResp ~ contExp1NoVar + contExp2, data=BenchData, phy=BENCHPoly, names.col=node, polytomy.brlen=1)
crunch.CrPl413.tab <- caic.table(crunch.CrPl413, CAIC.codes=TRUE)

crunch.CrPl657 <- crunch(contRespNA ~ contExp1NA + contExp2NA, data=BenchData, phy=BENCHPoly, names.col=node, polytomy.brlen=1)
crunch.CrPl657.tab <- caic.table(crunch.CrPl657, CAIC.codes=TRUE)
@

The CAIC codes can now be used to order the datasets from the two implementations in order to compare the calculated values. The contrasts in the response variable are plotted in Fig. \ref{crunch}, with data from CAIC shown in black and overplotting of data from \texttt{crunch} in red. The range in the differences between these values is shown in Table \ref{crunchDiffs}, where the maximum differences of around $\pm1e-5$ arise from the limited precision of the values saved in the CAIC output. The exceptions occur in the case of variables with no variance at a polytomy --- these values are identical but currently have  opposite signs between the two implementations.

<<>>=
crunch.CrDi213.tab <- crunch.CrDi213.tab[order(crunch.CrDi213.tab$CAIC.code),]
crunch.CrDi657.tab <- crunch.CrDi657.tab[order(crunch.CrDi657.tab$CAIC.code),]
crunch.CrPl213.tab <- crunch.CrPl213.tab[order(crunch.CrPl213.tab$CAIC.code),]
crunch.CrPl413.tab <- crunch.CrPl413.tab[order(crunch.CrPl413.tab$CAIC.code),]
crunch.CrPl657.tab <- crunch.CrPl657.tab[order(crunch.CrPl657.tab$CAIC.code),]

CAIC.CrDi213 <- CAIC.CrDi213[order(CAIC.CrDi213$Code),]
CAIC.CrDi657 <- CAIC.CrDi657[order(CAIC.CrDi657$Code),]
CAIC.CrPl213 <- CAIC.CrPl213[order(CAIC.CrPl213$Code),]
CAIC.CrPl413 <- CAIC.CrPl413[order(CAIC.CrPl413$Code),]
CAIC.CrPl657 <- CAIC.CrPl657[order(CAIC.CrPl657$Code),]
@

\begin{figure}[htbp]
  \begin{center}
<<echo=FALSE, fig=true, width=6, height=12>>=
par(mfrow=c(5,2), mar=c(2,2,1,1), mgp=c(1,0,0), tcl=-.1)

plot(contResp~contExp1, data=CAIC.CrDi213)
with(crunch.CrDi213.tab, 
     points(x=contExp1, y=contResp, col="red", pch=3, cex=0.8))
plot(contResp~contExp2, data=CAIC.CrDi213)
with(crunch.CrDi213.tab, 
     points(x=contExp2, y=contResp, col="red", pch=3, cex=0.8))

plot(contRespNA~contExp1NA, data=CAIC.CrDi657)
with(crunch.CrDi657.tab, 
     points(x=contExp1NA, y=contRespNA, col="red", pch=3, cex=0.8))
plot(contRespNA~contExp2NA, data=CAIC.CrDi657)
with(crunch.CrDi657.tab, 
     points(x=contExp2NA, y=contRespNA, col="red", pch=3, cex=0.8))

plot(contResp~contExp1, data=CAIC.CrPl213)
with(crunch.CrPl213.tab, 
     points(x=contExp1, y=contResp, col="red", pch=3, cex=0.8))
plot(contResp~contExp2, data=CAIC.CrPl213)
with(crunch.CrPl213.tab, 
     points(x=contExp2, y=contResp, col="red", pch=3, cex=0.8))

plot(contResp~contExp1NoVar, data=CAIC.CrPl413)
with(crunch.CrPl413.tab, 
     points(x=contExp1NoVar, y=contResp, col="red", pch=3, cex=0.8))
plot(contResp~contExp2, data=CAIC.CrPl413)
with(crunch.CrPl413.tab, 
     points(x=contExp2, y=contResp, col="red", pch=3, cex=0.8))

plot(contRespNA~contExp1NA, data=CAIC.CrPl657)
with(crunch.CrPl657.tab, 
     points(x=contExp1NA, y=contRespNA, col="red", pch=3, cex=0.8))
plot(contRespNA~contExp2NA, data=CAIC.CrPl657)
with(crunch.CrPl657.tab, 
     points(x=contExp2NA, y=contRespNA, col="red", pch=3, cex=0.8))

@
    \caption{Overplotting of results from CAIC (black) and \texttt{crunch()} (red) analyses.}
    \label{crunch}
  \end{center}
\end{figure}

<<echo=FALSE, print=FALSE, results=tex>>=

# create a table of the differences 
diffRangeTab <- data.frame(analysis=c("CrDi213","CrDi657","CrPl213","CrPl413","CrPl657"),
						V1Min=numeric(5), V1Max=numeric(5), V2Min=numeric(5),
						V2Max=numeric(5), V3Min=numeric(5), V3Max=numeric(5))

diffRangeTab[1, 2:3] <- range(CAIC.CrDi213$contResp - crunch.CrDi213.tab$contResp)
diffRangeTab[1, 4:5] <- range(CAIC.CrDi213$contExp1 - crunch.CrDi213.tab$contExp1)
diffRangeTab[1, 6:7] <- range(CAIC.CrDi213$contExp2 - crunch.CrDi213.tab$contExp2)

diffRangeTab[2, 2:3] <- range(CAIC.CrDi657$contRespNA - crunch.CrDi657.tab$contRespNA)
diffRangeTab[2, 4:5] <- range(CAIC.CrDi657$contExp1NA - crunch.CrDi657.tab$contExp1NA)
diffRangeTab[2, 6:7] <- range(CAIC.CrDi657$contExp2NA - crunch.CrDi657.tab$contExp2NA)

diffRangeTab[3, 2:3] <- range(CAIC.CrPl213$contResp - crunch.CrPl213.tab$contResp)
diffRangeTab[3, 4:5] <- range(CAIC.CrPl213$contExp1 - crunch.CrPl213.tab$contExp1)
diffRangeTab[3, 6:7] <- range(CAIC.CrPl213$contExp2 - crunch.CrPl213.tab$contExp2)

diffRangeTab[4, 2:3] <- range(CAIC.CrPl413$contResp - crunch.CrPl413.tab$contResp)
diffRangeTab[4, 4:5] <- range(CAIC.CrPl413$contExp1NoVar - crunch.CrPl413.tab$contExp1NoVar)
diffRangeTab[4, 6:7] <- range(CAIC.CrPl413$contExp2 - crunch.CrPl413.tab$contExp2)

diffRangeTab[5, 2:3] <- range(CAIC.CrPl657$contRespNA - crunch.CrPl657.tab$contRespNA)
diffRangeTab[5, 4:5] <- range(CAIC.CrPl657$contExp1NA - crunch.CrPl657.tab$contExp1NA)
diffRangeTab[5, 6:7] <- range(CAIC.CrPl657$contExp2NA - crunch.CrPl657.tab$contExp2NA)

library(xtable)

diffRangeTab <- xtable(diffRangeTab, digits=9)
caption(diffRangeTab) <- "Range in the differences between crunch and CAIC contrasts."
label(diffRangeTab) <- "crunchDiffs"
print(diffRangeTab, include.rownames=FALSE)
@


\subsection{The \texttt{brunch} algorithm}

Eight analyses were performed in CAIC to benchmark the following tests:
\begin{description}
  \item[BrDi813 and BrPl813] A binary factor as the primary variable with two continuous variables on both the dichotomous and polytomous tree.
  \item[BrDi913 and BrPl913] An ordered ternary factor as the primary variable with two continuous variables on both the dichotomous and polytomous tree. 
  \item[BrDi1057 and BrPl1057] A binary factor and two continuous variables, all with missing data, on both the dichotomous and polytomous tree.
  \item[BrDi1157 and BrPl1157]  A ordered ternary factor and two continuous variables, all with missing data, on both the dichotomous and polytomous tree.
\end{description}

Again, the log files `CAIC\_BenchTreeDi.log' and `CAIC\_BenchTreePoly.log' describe the input used to run these analyses in CAIC. The following code loads the output of the CAIC analysis into R. Each of the data frames contains the standard CAIC contrast table consisting of: the CAIC code for the node, the contrast in each variable, the standard deviation of the contrast, the height of the node, the number of subtaxa descending from the node; and the nodal values of the variables.

<<>>=
CAIC.BrDi813  <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_BrDi813")
CAIC.BrDi913  <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_BrDi913")
CAIC.BrDi1057 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_BrDi1057")
CAIC.BrDi1157 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_BrDi1157")
CAIC.BrPl813  <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_BrPl813")
CAIC.BrPl913  <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_BrPl913")
CAIC.BrPl1057 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_BrPl1057")
CAIC.BrPl1157 <- read.delim("../../benchmarks/CAIC_outputs/BenchCAIC.dat_BrPl1157")
@

The next section of code duplicates these CAIC analyses using the \texttt{brunch()} function. Note that  \texttt{brunch()} does not calculate contrasts at polytomies and the tests using the polytomous tree are to check that the algorithms are drawing the same contrasts from the data.  The \texttt{caic.table()} function is again used to extract a contrast table from the \texttt{brunch()} output.

<<>>=
brunch.BrDi813  <- brunch(contResp ~ binFact + contExp2, data=BenchData, phy=BENCH, names.col=node)
brunch.BrDi813.tab  <- caic.table(brunch.BrDi813, CAIC.codes=TRUE)
brunch.BrDi913  <- brunch(contResp ~ triFact + contExp2, data=BenchData, phy=BENCH, names.col=node)
brunch.BrDi913.tab  <- caic.table(brunch.BrDi913, CAIC.codes=TRUE)
brunch.BrDi1057 <- brunch(contRespNA ~ binFactNA + contExp2NA, data=BenchData, phy=BENCH, names.col=node)
brunch.BrDi1057.tab <- caic.table(brunch.BrDi1057, CAIC.codes=TRUE)
brunch.BrDi1157 <- brunch(contRespNA ~ triFactNA + contExp2NA, data=BenchData, phy=BENCH, names.col=node)
brunch.BrDi1157.tab <- caic.table(brunch.BrDi1157, CAIC.codes=TRUE)
brunch.BrPl813  <- brunch(contResp ~ binFact + contExp2, data=BenchData, phy=BENCHPoly, names.col=node)
brunch.BrPl813.tab  <- caic.table(brunch.BrPl813, CAIC.codes=TRUE)
brunch.BrPl913  <- brunch(contResp ~ triFact + contExp2, data=BenchData, phy=BENCHPoly, names.col=node)
brunch.BrPl913.tab  <- caic.table(brunch.BrPl913, CAIC.codes=TRUE)
brunch.BrPl1057 <- brunch(contRespNA ~ binFactNA + contExp2NA, data=BenchData, phy=BENCHPoly, names.col=node)
brunch.BrPl1057.tab <- caic.table(brunch.BrPl1057, CAIC.codes=TRUE)
brunch.BrPl1157 <- brunch(contRespNA ~ triFactNA + contExp2NA, data=BenchData, phy=BENCHPoly, names.col=node)
brunch.BrPl1157.tab <- caic.table(brunch.BrPl1157, CAIC.codes=TRUE)
@

The CAIC codes can again now be used to order the datasets from the two implementations in order to compare the calculated values. The  contrasts from each test are overplotted in Fig. \ref{brunchbin} and Fig. \ref{brunchtri} and the range in the differences between these values is shown in Table \ref{brunchDiffs}.

<<>>=
brunch.BrDi813.tab  <- brunch.BrDi813.tab[order(brunch.BrDi813.tab$CAIC.code),]
brunch.BrDi913.tab  <- brunch.BrDi913.tab[order(brunch.BrDi913.tab$CAIC.code),]
brunch.BrDi1057.tab <- brunch.BrDi1057.tab[order(brunch.BrDi1057.tab$CAIC.code),]
brunch.BrDi1157.tab <- brunch.BrDi1157.tab[order(brunch.BrDi1157.tab$CAIC.code),]
brunch.BrPl813.tab  <- brunch.BrPl813.tab[order(brunch.BrPl813.tab$CAIC.code),]
brunch.BrPl913.tab  <- brunch.BrPl913.tab[order(brunch.BrPl913.tab$CAIC.code),]
brunch.BrPl1057.tab <- brunch.BrPl1057.tab[order(brunch.BrPl1057.tab$CAIC.code),]
brunch.BrPl1157.tab <- brunch.BrPl1157.tab[order(brunch.BrPl1157.tab$CAIC.code),]

CAIC.BrDi813  <- CAIC.BrDi813[order(CAIC.BrDi813$Code),]
CAIC.BrDi913  <- CAIC.BrDi913[order(CAIC.BrDi913$Code),]
CAIC.BrDi1057 <- CAIC.BrDi1057[order(CAIC.BrDi1057$Code),]
CAIC.BrDi1157 <- CAIC.BrDi1157[order(CAIC.BrDi1157$Code),]
CAIC.BrPl813  <- CAIC.BrPl813[order(CAIC.BrPl813$Code),]
CAIC.BrPl913  <- CAIC.BrPl913[order(CAIC.BrPl913$Code),]
CAIC.BrPl1057 <- CAIC.BrPl1057[order(CAIC.BrPl1057$Code),]
CAIC.BrPl1157 <- CAIC.BrPl1157[order(CAIC.BrPl1157$Code),]
@

\begin{figure}[htbp]
  \begin{center}
<<echo=FALSE, fig=true, width=6, height=9.6>>=
par(mfrow=c(4,2), mar=c(2,2,1,1), mgp=c(1,0,0), tcl=-.1)

plot(contResp ~ binFact, data=CAIC.BrDi813)
with(brunch.BrDi813.tab, 
     points(x=binFact, y=contResp, col="red", pch=3, cex=0.8))
plot(contResp ~ contExp2, data=CAIC.BrDi813)
with(brunch.BrDi813.tab, 
     points(x=contExp2, y=contResp, col="red", pch=3, cex=0.8))

plot(contResp ~ binFact, data=CAIC.BrPl813)
with(brunch.BrPl813.tab, 
     points(x=binFact, y=contResp, col="red", pch=3, cex=0.8))
plot(contResp ~ contExp2, data=CAIC.BrPl813)
with(brunch.BrPl813.tab, 
     points(x=contExp2, y=contResp, col="red", pch=3, cex=0.8))

plot(contRespNA ~ binFactNA, data=CAIC.BrDi1057)
with(brunch.BrDi1057.tab, 
     points(x=binFactNA, y=contRespNA, col="red", pch=3, cex=0.8))
plot(contRespNA ~ contExp2NA, data=CAIC.BrDi1057)
with(brunch.BrDi1057.tab, 
     points(x=contExp2NA, y=contRespNA, col="red", pch=3, cex=0.8))

plot(contRespNA ~ binFactNA, data=CAIC.BrPl1057)
with(brunch.BrPl1057.tab, 
     points(x=binFactNA, y=contRespNA, col="red", pch=3, cex=0.8))
plot(contRespNA ~ contExp2NA, data=CAIC.BrPl1057)
with(brunch.BrPl1057.tab, 
     points(x=contExp2NA, y=contRespNA, col="red", pch=3, cex=0.8))

@
    \caption{Overplotting of results from CAIC (black) and \texttt{brunch()} (red) analyses on the dichotomous tree.}
    \label{brunchbin}
  \end{center}
\end{figure}

\begin{figure}[htbp]
  \begin{center}
<<echo=FALSE, fig=true, width=6, height=9.6>>=
par(mfrow=c(4,2), mar=c(2,2,1,1), mgp=c(1,0,0), tcl=-.1)

plot(contResp ~ triFact, data=CAIC.BrDi913)
with(brunch.BrDi913.tab, 
     points(x=triFact, y=contResp, col="red", pch=3, cex=0.8))
plot(contResp ~ contExp2, data=CAIC.BrDi913)
with(brunch.BrDi913.tab, 
     points(x=contExp2, y=contResp, col="red", pch=3, cex=0.8))

plot(contResp ~ triFact, data=CAIC.BrPl913)
with(brunch.BrPl913.tab, 
     points(x=triFact, y=contResp, col="red", pch=3, cex=0.8))
plot(contResp ~ contExp2, data=CAIC.BrPl913)
with(brunch.BrPl913.tab, 
     points(x=contExp2, y=contResp, col="red", pch=3, cex=0.8))

plot(contRespNA ~ triFactNA, data=CAIC.BrDi1157)
with(brunch.BrDi1157.tab, 
     points(x=triFactNA, y=contRespNA, col="red", pch=3, cex=0.8))
plot(contRespNA ~ contExp2NA, data=CAIC.BrDi1157)
with(brunch.BrDi1157.tab, 
     points(x=contExp2NA, y=contRespNA, col="red", pch=3, cex=0.8))

plot(contRespNA ~ triFactNA, data=CAIC.BrPl1157)
with(brunch.BrPl1157.tab, 
     points(x=triFactNA, y=contRespNA, col="red", pch=3, cex=0.8))
plot(contRespNA ~ contExp2NA, data=CAIC.BrPl1157)
with(brunch.BrPl1157.tab, 
     points(x=contExp2NA, y=contRespNA, col="red", pch=3, cex=0.8))

@
    \caption{Overplotting of results from CAIC (black) and \texttt{brunch()} (red) analyses using a three level factor.}
    \label{brunchtri}
  \end{center}
\end{figure}

<<echo=FALSE, print=FALSE, results=tex>>=
# create a table of the differences 
diffRangeTab <- data.frame(analysis=c("BrDi813","BrPl813","BrDi1057","BrPl1057",
                                      "BrDi913","BrPl913","BrDi1157","BrPl1157"),
						V1Min=numeric(8), V1Max=numeric(8), V2Min=numeric(8),
						V2Max=numeric(8), V3Min=numeric(8), V3Max=numeric(8))

for(tst in 1:4){
	currCAIC <- get(paste("CAIC", diffRangeTab$analysis[tst], sep="."))
	currBrunch <- get(paste("brunch", diffRangeTab$analysis[tst], "tab", sep="."))
	
	diffRangeTab[1, 2:3] <- range(currCAIC[,3] - currBrunch[,2])
	diffRangeTab[1, 4:5] <- range(currCAIC[,2] - currBrunch[,3])
	diffRangeTab[1, 6:7] <- range(currCAIC[,4] - currBrunch[,4])
}

library(xtable)

diffRangeTab <- xtable(diffRangeTab, digits=9)
caption(diffRangeTab) <- "Range in the differences between brunch and CAIC contrasts."
label(diffRangeTab) <- "brunchDiffs"
print(diffRangeTab, include.rownames=FALSE)
@

\end{document}
